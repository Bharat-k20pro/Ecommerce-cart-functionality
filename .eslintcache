[{"C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\store\\index.js":"3","C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\components\\Layout\\Layout.js":"4","C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\components\\UI\\Notification.js":"5","C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\components\\Cart\\Cart.js":"6","C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\components\\Shop\\Products.js":"7","C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\components\\Cart\\CartItem.js":"8","C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\components\\Layout\\MainHeader.js":"9","C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\components\\UI\\Card.js":"10","C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\components\\Shop\\ProductItem.js":"11","C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\components\\Cart\\CartButton.js":"12"},{"size":267,"mtime":1628262829234,"results":"13","hashOfConfig":"14"},{"size":1338,"mtime":1629023738776,"results":"15","hashOfConfig":"14"},{"size":5874,"mtime":1629026826997,"results":"16","hashOfConfig":"14"},{"size":233,"mtime":1616580182000,"results":"17","hashOfConfig":"14"},{"size":491,"mtime":1628963675534,"results":"18","hashOfConfig":"14"},{"size":648,"mtime":1628342715192,"results":"19","hashOfConfig":"14"},{"size":1019,"mtime":1629024683447,"results":"20","hashOfConfig":"14"},{"size":1121,"mtime":1628343866368,"results":"21","hashOfConfig":"14"},{"size":361,"mtime":1616580182000,"results":"22","hashOfConfig":"14"},{"size":244,"mtime":1616580182000,"results":"23","hashOfConfig":"14"},{"size":895,"mtime":1628342636362,"results":"24","hashOfConfig":"14"},{"size":678,"mtime":1628343196838,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1y99r0c",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\index.js",[],["54","55"],"C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\App.js",["56"],"import { useEffect } from \"react\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { cartShowActions } from \"./store/index\";\nimport { sendCartData, fetchCartData, fetchProductData } from \"./store/index\";\n\nlet isInitial = true;\n\nfunction App() {\n  const cartShow = useSelector((state) => state.cartShow.showCart);\n  const cartItem = useSelector((state) => state.cartItem);\n  const notification = useSelector((state) => state.cartShow.notification);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    if (cartItem.changed) dispatch(sendCartData(cartItem));\n  }, [cartItem, dispatch]);\n\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(fetchProductData());\n  }, [dispatch]);\n\n  return (\n    <>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {cartShow && <Cart />}\n        <Products />\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\store\\index.js",["57"],"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst cartShowInitialState = {\r\n  showCart: false,\r\n  notification: null,\r\n};\r\n\r\nconst cartShowSlice = createSlice({\r\n  name: \"cartShow\",\r\n  initialState: cartShowInitialState,\r\n  reducers: {\r\n    showOrHideCart(state) {\r\n      state.showCart = !state.showCart;\r\n    },\r\n    showNotification(state, action) {\r\n      state.notification = {\r\n        status: action.payload.status,\r\n        title: action.payload.title,\r\n        message: action.payload.message,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nconst cartItemInitialState = {\r\n  items: [],\r\n  changed: false,\r\n};\r\n\r\nconst cartItemSlice = createSlice({\r\n  name: \"cartItem\",\r\n  initialState: cartItemInitialState,\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.items = action.payload;\r\n    },\r\n    addItem(state, action) {\r\n      // state.items = state.items.concat(action.payload);\r\n      const existingItem = state.items.find((item) => {\r\n        return action.payload.id === item.id;\r\n      });\r\n      if (!existingItem) {\r\n        state.items.push(action.payload);\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalAmount += existingItem.price;\r\n      }\r\n      state.changed = true;\r\n    },\r\n    removeItem(state, action) {\r\n      const item = state.items.find((item) => item.id === action.payload);\r\n      if (item.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== action.payload);\r\n      } else {\r\n        item.quantity--;\r\n        item.totalAmount -= item.price;\r\n      }\r\n      state.changed = true;\r\n    },\r\n  },\r\n});\r\n\r\nconst initialProductitemState = {\r\n  Items: [],\r\n};\r\n\r\nconst productItemSlice = createSlice({\r\n  name: \"productItem\",\r\n  initialState: initialProductitemState,\r\n  reducers: {\r\n    replaceProduct(state, action) {\r\n      state.Items = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    cartShow: cartShowSlice.reducer,\r\n    cartItem: cartItemSlice.reducer,\r\n    productItem: productItemSlice.reducer,\r\n  },\r\n});\r\n\r\nexport const sendCartData = (cartItem) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(\r\n        cartShowActions.showNotification({\r\n          status: \"pending\",\r\n          title: \"Sending...\",\r\n          message: \"Sending cart data!\",\r\n        })\r\n      );\r\n      const res = await axios.put(\r\n        `${process.env.REACT_APP_FIREBASE_URL}/cart.json`,\r\n        JSON.stringify(cartItem)\r\n      );\r\n      dispatch(\r\n        cartShowActions.showNotification({\r\n          status: \"success\",\r\n          title: \"Success\",\r\n          message: \"Sent cart data successfully!\",\r\n        })\r\n      );\r\n      setTimeout(function () {\r\n        dispatch(\r\n          cartShowActions.showNotification({\r\n            status: \"\",\r\n            title: \"\",\r\n            message: \"\",\r\n          })\r\n        );\r\n      }, 1000);\r\n    } catch (error) {\r\n      dispatch(\r\n        cartShowActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error\",\r\n          message: \"Eror sending cart data!\",\r\n        })\r\n      );\r\n      setTimeout(function () {\r\n        dispatch(\r\n          cartShowActions.showNotification({\r\n            status: \"\",\r\n            title: \"\",\r\n            message: \"\",\r\n          })\r\n        );\r\n      }, 1000);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchCartData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_FIREBASE_URL}/cart.json`\r\n      );\r\n      const data = res.data.items;\r\n      dispatch(cartItemActions.replaceCart(data));\r\n    } catch (error) {\r\n      dispatch(\r\n        cartShowActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error\",\r\n          message: \"Error fetching cart data!\",\r\n        })\r\n      );\r\n      setTimeout(function () {\r\n        dispatch(\r\n          cartShowActions.showNotification({\r\n            status: \"\",\r\n            title: \"\",\r\n            message: \"\",\r\n          })\r\n        );\r\n      }, 1000);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchProductData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      cartShowActions.showNotification({\r\n        status: \"pending\",\r\n        title: \"Fetching...\",\r\n        message: \"Fetching cart data...\",\r\n      })\r\n    );\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_FIREBASE_URL}/product.json`\r\n      );\r\n      const data = res.data;\r\n      const products = [];\r\n      for (const key in data) {\r\n        products.push({\r\n          id: key,\r\n          title: data[key].title,\r\n          price: data[key].price,\r\n          description: data[key].description,\r\n        });\r\n      }\r\n      dispatch(productionItemActions.replaceProduct(products));\r\n      dispatch(\r\n        cartShowActions.showNotification({\r\n          status: \"success\",\r\n          title: \"Success\",\r\n          message: \"fetched product data successfully!\",\r\n        })\r\n      );\r\n      setTimeout(function () {\r\n        dispatch(\r\n          cartShowActions.showNotification({\r\n            status: \"\",\r\n            title: \"\",\r\n            message: \"\",\r\n          })\r\n        );\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(\r\n        cartShowActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error\",\r\n          message: \"Error fetching product data!\",\r\n        })\r\n      );\r\n      setTimeout(function () {\r\n        dispatch(\r\n          cartShowActions.showNotification({\r\n            status: \"\",\r\n            title: \"\",\r\n            message: \"\",\r\n          })\r\n        );\r\n      }, 1000);\r\n    }\r\n  };\r\n};\r\n\r\nexport const cartShowActions = cartShowSlice.actions;\r\nexport const cartItemActions = cartItemSlice.actions;\r\nexport const productionItemActions = productItemSlice.actions;\r\n\r\nexport default store;\r\n","C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\components\\UI\\Notification.js",[],"C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\components\\Cart\\Cart.js",[],"C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\components\\Shop\\Products.js",["58"],"import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nimport { useSelector } from \"react-redux\";\n\nconst DUMMY_PRODUCTS = [\n  {\n    id: \"p1\",\n    title: \"Test1\",\n    price: 6,\n    description: \"This is a first product - amazing!\",\n  },\n  {\n    id: \"p2\",\n    title: \"Test2\",\n    price: 7,\n    description: \"This is a second product - osm!\",\n  },\n  {\n    id: \"p3\",\n    title: \"Test3\",\n    price: 8,\n    description: \"This is a third product - nice!\",\n  },\n];\n\nconst Products = (props) => {\n  const products = useSelector((state) => state.productItem.Items);\n\n  const productItem = products.map((product) => {\n    return (\n      <ProductItem\n        key={product.id}\n        id={product.id}\n        title={product.title}\n        price={product.price}\n        description={product.description}\n      />\n    );\n  });\n\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>{productItem}</ul>\n    </section>\n  );\n};\n\nexport default Products;\n","C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\components\\Cart\\CartItem.js",[],"C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\components\\Layout\\MainHeader.js",[],"C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\components\\UI\\Card.js",[],"C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\components\\Shop\\ProductItem.js",[],"C:\\Users\\HP\\Desktop\\Ecommerce cart functionality\\src\\components\\Cart\\CartButton.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":8,"column":10,"nodeType":"65","messageId":"66","endLine":8,"endColumn":25},{"ruleId":"63","severity":1,"message":"67","line":96,"column":13,"nodeType":"65","messageId":"66","endLine":96,"endColumn":16},{"ruleId":"63","severity":1,"message":"68","line":6,"column":7,"nodeType":"65","messageId":"66","endLine":6,"endColumn":21},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'cartShowActions' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","'DUMMY_PRODUCTS' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]